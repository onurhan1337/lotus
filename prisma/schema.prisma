generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Challenge {
  id                   String                @id @default(uuid())
  name                 String
  description          String
  maxParticipants      Int?
  createdByUserId      String                // This will store the Clerk user ID
  rewards              Reward[]
  createdAt            DateTime              @default(now())
  updatedAt            DateTime              @updatedAt
  participants         ChallengeParticipant[]
  registrationDeadline DateTime?
  startDate            DateTime
  endDate              DateTime
  isActive             ChallengeStatus       @default(ACTIVE)
  feeds                Feed[]
  goals                Goal[]
}

enum ChallengeStatus {
  ACTIVE
  INACTIVE
  COMPLETED
}

model Reward {
  id          String    @id @default(uuid())
  name        String
  challengeId String
  challenge   Challenge @relation(fields: [challengeId], references: [id])
}

model ChallengeParticipant {
  id          String    @id @default(uuid())
  challengeId String
  userId      String // This will store the Clerk user ID
  challenge   Challenge @relation(fields: [challengeId], references: [id])
  createdAt   DateTime  @default(now())
  goals       Goal[]
}

model Feed {
  id          String    @id @default(uuid())
  userId      String // This will store the Clerk user ID
  challengeId String
  challenge   Challenge @relation(fields: [challengeId], references: [id])
  text        String
  likes       Int       @default(0)
  images      String[]  @default([])
  replies     Reply[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Reply {
  id          String    @id @default(uuid())
  userId      String
  feedId      String
  feed        Feed      @relation(fields: [feedId], references: [id])
  text        String
  likes       Int       @default(0)
  images      String[]  @default([])
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Goal {
  id          String    @id @default(uuid())
  name        String
  description String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  challengeId String
  challenge   Challenge @relation(fields: [challengeId], references: [id])
  userId      String
  participant ChallengeParticipant @relation(fields: [userId], references: [id])
}
